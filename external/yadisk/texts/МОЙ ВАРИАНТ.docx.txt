import React, { useState, useEffect, useRef } from 'react';
import {
View,
Text,
StyleSheet,
ImageBackground,
ScrollView,
TouchableOpacity,
Dimensions,
Modal,
Image,
TextInput
} from 'react-native';
const { width, height } = Dimensions.get('window');
const HomeScreen = () => {
const [activeTab, setActiveTab] = useState('home');
const [modalVisible, setModalVisible] = useState(false);
const [selectedImage, setSelectedImage] = useState(null);
const [price, setPrice] = useState('');
const [showSearchBlock, setShowSearchBlock] = useState(false);
const activities = [
{ id: '1', icon: 'üóª', title: '–í—É–ª–∫–∞–Ω—ã' },
{ id: '2', icon: '‚ô®Ô∏è', title: '–¢–µ—Ä–º—ã' },
{ id: '3', icon: 'üé£', title: '–†—ã–±–∞–ª–∫–∞'},
{ id: '4', icon: 'üêª', title: '–ü—Ä–∏—Ä–æ–¥–∞' },
{ id: '5', icon: '', title: '–í–µ—Ä—Ç–æ–ª—ë—Ç—ã' },
{ id: '6', icon: '‚õµ', title: '–ú–æ—Ä—Å–∫–∏–µ' },
{ id: '7', icon: 'üöó', title: '–î–∂–∏–ø-–¢—É—Ä—ã' },
{ id: '8', icon: 'üõ∂', title: '–°–ø–ª–∞–≤—ã' }
];
const navItems = [
{ id: 'auth', icon: 'üë§', label: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
{ id: 'map', icon: 'üó∫Ô∏è', label: '–ö–∞—Ä—Ç–∞ –ª–µ—Å–∞' },
{ id: 'home', icon: 'üè†', label: '–ì–ª–∞–≤–Ω–∞—è' },
{ id: 'favorites', icon: '‚ù§Ô∏è', label: '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ' },
{ id: 'search', icon: 'üîç', label: '–ü–æ–∏—Å–∫' },
{ id: 'menu', icon: '‚ò∞', label: '–ú–µ–Ω—é' },
];
const partnerPhotos = [
{
id: '1',
url: 'https://fishingkam.ru/wp-content/uploads/2023/06/rybalka-na-kamchatke-1.jpg',
title: '–†—ã–±–∞–ª–∫–∞ –Ω–∞ –ö–∞–º—á–∞—Ç–∫–µ',
source: 'fishingkam.ru'
},
{
id: '2',
url: 'https://mestechkokam.ru/wp-content/uploads/2023/07/kamchatka-tours-1.jpg',
title: '–¢—É—Ä—ã –ø–æ –ö–∞–º—á–∞—Ç–∫–µ',
source: 'mestechkokam.ru'
},
{
id: '3',
url: 'https://optim.tildacdn.com/tild6136-3038-4630-a135-633937346462/-/format/webp/noroot.png',
title: '–°–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ',
source: 'tildacdn.com'
},
{
id: '4',
url: 'https://fishingkam.ru/wp-content/uploads/2023/06/kamchatka-fishing.jpg',
title: '–ú–æ—Ä—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞',
source: 'fishingkam.ru'
},
{
id: '5',
url: 'https://mestechkokam.ru/wp-content/uploads/2023/07/kamchatka-volcano.jpg',
title: '–í—É–ª–∫–∞–Ω—ã –ö–∞–º—á–∞—Ç–∫–∏',
source: 'mestechkokam.ru'
},
{
id: '6',
url: 'https://mestechkokam.ru/wp-content/uploads/2024/03/pl5_3.jpg',
title: '–ú–µ–¥–≤–µ–¥–∏ –ö–∞–º—á–∞—Ç–∫–∏',
source: 'mestechkokam.ru'
},
];
// –°–æ–∑–¥–∞–µ–º —É–¥–≤–æ–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
const doublePartnerPhotos = [...partnerPhotos, ...partnerPhotos];
const scrollViewRef = useRef(null);
const currentOffset = useRef(0);
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏
useEffect(() => {
const timer = setInterval(() => {
if (scrollViewRef.current) {
// –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –Ω–∞ 1 –ø–∏–∫—Å–µ–ª—å –∫–∞–∂–¥—ã–µ 30 –º—Å
currentOffset.current += 1;
scrollViewRef.current.scrollTo({ x: currentOffset.current, animated: false });
// –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ –ø–µ—Ä–≤–æ–π –∫–æ–ø–∏–∏, —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ
const maxScroll = (width * 0.65 / 4 + 8) * partnerPhotos.length;
if (currentOffset.current >= maxScroll) {
currentOffset.current = 0;
scrollViewRef.current.scrollTo({ x: 0, animated: false });
}
}
}, 30);
return () => clearInterval(timer);
}, []);
const openImage = (image) => {
setSelectedImage(image);
setModalVisible(true);
};
const handleNavPress = (id) => {
setActiveTab(id);
setShowSearchBlock(id === 'search');
};
return (
<ImageBackground
source={{ uri: 'https://cs8.pikabu.ru/post_img/big/2017/05/12/4/1494568737139342763.jpg' }}
style={styles.background}
resizeMode="cover"
>
<View style={styles.overlay} />
<ScrollView contentContainerStyle={styles.container}>
<View style={styles.header}>
<Text style={styles.mainTitle}>–ó–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –†–æ—Å—Å–∏—è</Text>
<Text style={styles.subTitle}>–ö–∞–º—á–∞—Ç–∫–∞ - –∑–µ–º–ª—è –æ–≥–Ω—è –∏ –ª—å–¥–∞</Text>
</View>
{showSearchBlock && (
<View style={styles.tourBlock}>
<Text style={styles.gridTitle}>–ù–∞–π—Ç–∏ —Ç—É—Ä</Text>
<TouchableOpacity
style={styles.searchButtonBlock}
onPress={() => console.log('Search pressed')}
>
<Text style={styles.searchIcon}>üîç</Text>
</TouchableOpacity>
<View style={styles.filtersGrid}>
<TouchableOpacity
style={styles.filterItem}
onPress={() => console.log('Activity type pressed')}
>
<Text style={styles.filterIcon}>üèïÔ∏è</Text>
<Text style={styles.filterText}>–í–∏–¥ –æ—Ç–¥—ã—Ö–∞</Text>
</TouchableOpacity>
<TouchableOpacity
style={styles.filterItem}
onPress={() => console.log('Dates pressed')}
>
<Text style={styles.filterIcon}>üìÖ</Text>
<Text style={styles.filterText}>–î–∞—Ç—ã</Text>
</TouchableOpacity>
<TouchableOpacity
style={styles.filterItem}
onPress={() => console.log('Travelers pressed')}
>
<Text style={styles.filterIcon}>üë®‚Äçüë©‚Äçüëß‚Äçüë¶</Text>
<Text style={styles.filterText}>–õ—é–¥–∏</Text>
</TouchableOpacity>
<View style={styles.filterItem}>
<TextInput
style={styles.priceInput}
placeholder="–¶–µ–Ω–∞"
placeholderTextColor="rgba(255, 255, 255, 0.7)"
value={price}
onChangeText={setPrice}
keyboardType="numeric"
/>
</View>
</View>
</View>
)}
<View style={styles.activitiesContainer}>
<Text style={styles.sectionTitle}>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ö–∞–º—á–∞—Ç–∫–∏</Text>
<View style={styles.activitiesGrid}>
{activities.map((activity) => (
<TouchableOpacity
key={activity.id}
style={[
styles.activityCard,
activeTab === activity.id && styles.activeActivityCard
]}
onPress={() => setActiveTab(activity.id)}
>
<Text style={[styles.activityIcon, styles.whiteIcon]}>{activity.icon}</Text>
<Text style={styles.activityTitle}>{activity.title}</Text>
</TouchableOpacity>
))}
</View>
</View>
<View style={styles.carouselContainer}>
<Text style={styles.sectionTitle}>–ö–∞–º—á–∞—Ç–∫–∞ –≥–ª–∞–∑–∞–º–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤</Text>
<View style={styles.carouselWrapper}>
<ScrollView
ref={scrollViewRef}
horizontal
showsHorizontalScrollIndicator={false}
contentContainerStyle={styles.carousel}
scrollEventThrottle={16}
>
{doublePartnerPhotos.map((photo, index) => (
<TouchableOpacity
key={`${photo.id}-${index}`}
onPress={() => openImage(photo)}
activeOpacity={0.8}
>
<Image
source={{ uri: photo.url }}
style={styles.carouselItem}
resizeMode="cover"
/>
</TouchableOpacity>
))}
</ScrollView>
</View>
</View>
</ScrollView>
<View style={styles.navBar}>
{navItems.map((item) => (
<TouchableOpacity
key={item.id}
style={[
styles.navButton,
activeTab === item.id && styles.activeNavButton
]}
onPress={() => handleNavPress(item.id)}
activeOpacity={0.7}
>
<Text
style={[
styles.navIcon,
activeTab === item.id ? styles.activeNavIcon : styles.inactiveNavIcon
]}
>
{item.icon}
</Text>
</TouchableOpacity>
))}
</View>
<Modal
animationType="fade"
transparent={true}
visible={modalVisible}
onRequestClose={() => setModalVisible(false)}
>
<View style={styles.modalContainer}>
{selectedImage && (
<>
<Image
source={{ uri: selectedImage.url }}
style={styles.fullImage}
resizeMode="contain"
/>
<View style={styles.imageInfo}>
<Text style={styles.modalTitle}>{selectedImage.title}</Text>
<Text style={styles.modalSource}>–ò—Å—Ç–æ—á–Ω–∏–∫: {selectedImage.source}</Text>
</View>
<TouchableOpacity
style={styles.closeButton}
onPress={() => setModalVisible(false)}
>
<Text style={styles.closeButtonText}>‚úï</Text>
</TouchableOpacity>
</>
)}
</View>
</Modal>
</ImageBackground>
);
};
const styles = StyleSheet.create({
background: {
flex: 1,
width: '100%',
height: '100%',
},
overlay: {
...StyleSheet.absoluteFillObject,
backgroundColor: 'rgba(0, 0, 0, 0.3)',
},
container: {
flexGrow: 1,
padding: 15,
paddingBottom: 50,
},
header: {
marginTop: height * 0.04,
marginBottom: 20,
alignItems: 'center',
},
mainTitle: {
fontSize: 28,
fontWeight: 'bold',
color: '#FFF',
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.7)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 5,
marginBottom: 8,
},
subTitle: {
fontSize: 16,
color: '#FFF',
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 3,
},
activitiesContainer: {
marginVertical: 15,
},
sectionTitle: {
fontSize: 20,
fontWeight: '600',
color: '#FFF',
marginBottom: 15,
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 3,
},
activitiesGrid: {
flexDirection: 'row',
flexWrap: 'wrap',
justifyContent: 'space-between',
paddingHorizontal: 5,
},
activityCard: {
width: '24%',
alignItems: 'center',
marginBottom: 10,
padding: 4,
backgroundColor: 'rgba(255, 255, 255, 0.15)',
borderRadius: 10,
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.2)',
},
activeActivityCard: {
backgroundColor: 'rgba(255, 165, 0, 0.4)',
borderColor: 'rgba(255, 165, 0, 0.7)',
},
activityIcon: {
fontSize: 20,
marginBottom: 2,
},
whiteIcon: {
color: '#FFF',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 2,
},
activityTitle: {
fontSize: 10,
fontWeight: '500',
color: '#FFF',
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 2,
},
carouselContainer: {
marginTop: 15,
},
carouselWrapper: {
height: 50, // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
},
carousel: {
flexDirection: 'row',
alignItems: 'center',
},
carouselItem: {
width: width * 0.65 / 4, // –£–º–µ–Ω—å—à–∏–ª–∏ –≤ 4 —Ä–∞–∑–∞
height: 180 / 4, // –£–º–µ–Ω—å—à–∏–ª–∏ –≤ 4 —Ä–∞–∑–∞
marginRight: 8,
borderRadius: 4,
backgroundColor: '#ccc',
},
navBar: {
position: 'absolute',
bottom: 10,
left: '5%',
right: '5%',
backgroundColor: 'rgba(120, 120, 120, 0.4)',
flexDirection: 'row',
justifyContent: 'space-around',
alignItems: 'center',
borderRadius: 22,
padding: 6,
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.2)',
shadowColor: '#000',
shadowOffset: { width: 0, height: 2 },
shadowOpacity: 0.2,
shadowRadius: 4,
elevation: 3,
height: 40,
},
navButton: {
width: 32,
height: 32,
borderRadius: 16,
justifyContent: 'center',
alignItems: 'center',
backgroundColor: 'transparent',
},
activeNavButton: {
backgroundColor: 'rgba(255, 255, 255, 0.9)',
},
navIcon: {
fontSize: 18,
textAlign: 'center',
},
activeNavIcon: {
color: '#000',
},
inactiveNavIcon: {
color: 'rgba(255, 255, 255, 0.8)',
},
tourBlock: {
backgroundColor: 'rgba(255, 255, 255, 0.15)',
borderRadius: 20,
padding: 15,
marginVertical: 15,
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.25)',
shadowColor: '#000',
shadowOffset: { width: 0, height: 4 },
shadowOpacity: 0.2,
shadowRadius: 8,
elevation: 5,
position: 'relative',
},
gridTitle: {
fontSize: 20,
fontWeight: 'bold',
color: '#FFF',
marginBottom: 15,
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 3,
},
filtersGrid: {
flexDirection: 'row',
flexWrap: 'wrap',
justifyContent: 'space-between',
},
filterItem: {
width: '48%',
height: 60,
marginBottom: 10,
backgroundColor: 'rgba(0, 0, 0, 0.2)',
borderRadius: 12,
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.15)',
justifyContent: 'center',
alignItems: 'center',
},
filterIcon: {
fontSize: 20,
color: '#FFF',
marginBottom: 5,
},
filterText: {
fontSize: 12,
fontWeight: '500',
color: '#FFF',
textAlign: 'center',
textShadowColor: 'rgba(0, 0, 0, 0.5)',
textShadowOffset: { width: 1, height: 1 },
textShadowRadius: 2,
},
priceInput: {
color: '#FFF',
textAlign: 'center',
fontSize: 14,
fontWeight: '500',
padding: 8,
width: '100%',
},
searchButtonBlock: {
position: 'absolute',
top: 15,
right: 15,
width: 40,
height: 40,
borderRadius: 20,
backgroundColor: 'rgba(255, 255, 255, 0.25)',
justifyContent: 'center',
alignItems: 'center',
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.3)',
},
searchIcon: {
fontSize: 20,
color: '#FFF',
},
modalContainer: {
flex: 1,
backgroundColor: 'rgba(0, 0, 0, 0.9)',
justifyContent: 'center',
alignItems: 'center',
},
fullImage: {
width: width,
height: height * 0.7,
},
imageInfo: {
position: 'absolute',
bottom: 40,
left: 20,
right: 20,
backgroundColor: 'rgba(0, 0, 0, 0.6)',
padding: 15,
borderRadius: 10,
},
modalTitle: {
color: '#FFF',
fontSize: 20,
fontWeight: 'bold',
marginBottom: 5,
},
modalSource: {
color: 'rgba(255, 255, 255, 0.7)',
fontSize: 16,
},
closeButton: {
position: 'absolute',
top: 40,
right: 20,
backgroundColor: 'rgba(0, 0, 0, 0.5)',
width: 40,
height: 40,
borderRadius: 20,
justifyContent: 'center',
alignItems: 'center',
borderWidth: 1,
borderColor: 'rgba(255, 255, 255, 0.3)',
},
closeButtonText: {
color: '#FFF',
fontSize: 24,
fontWeight: 'bold',
},
});
export default HomeScreen;